name: static web deployment on nginx
on:
  # push:
  #   branches: [ main ]

   workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output-1: ${{steps.step1.outputs.pubip}}
      output-2: ${{steps.step2.outputs.instanceid}}
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  
    steps:
    - uses: actions/checkout@master
      name: code chekout

    # - id: install-aws-cli
    - name: install aws cli
      run: |
        sudo apt install awscli -y
      # uses: unfor19/install-aws-cli-action@v1
      # with:
      #  version: 2     # default
      #  verbose: false # default
      #  arch: amd64    # allowed values: amd64, arm64
      #  rootdir: ""    # defaults to "PWD"
      #  workdir: ""    # defaults to "PWD/unfor19-awscli"


    - name: configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
  
    - name: creating nginx Web EC2 through aws cli and store instance-id and public-ip
      run: |
          aws ec2 run-instances --image-id ami-0c88054e21ce3bcf0 --instance-type t2.micro --key-name salman_nv_key --query 'Instances[*].InstanceId' --output text >  instance-id.txt  


          aws ec2 describe-instances --instance-ids $(cat instance-id.txt) --query 'Reservations[0].Instances[0].PublicIpAddress' --output text > publicip.txt


    # - name: Copy a file from s3 through  s3 github actions
    #   uses: prewk/s3-cp-action@v2
    #   with:
    #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     source: 's3://mylab321/nginx-log/'
    #     dest: './something-local'

      #   - name: update auto scaling group
      # run: |
      #   aws autoscaling update-auto-scaling-group --auto-scaling-group-name test --launch-template LaunchTemplateName=test ,
        
    - id: step1
      run: echo "::set-output name=pubip::$(cat publicip.txt)"
    - id: step2
      run: echo "::set-output name=instanceid::$(cat instance-id.txt)"  

  job2:
    runs-on: ubuntu-latest
    needs: job1

    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    steps:
    - name: install aws cli
      run: |
        sudo apt install awscli -y

    - name: configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

    - name: copy .zip file form s3
      run: aws s3 cp s3://mylab321/pro-html.zip pro-html.zip

    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{needs.job1.outputs.output-1}}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: 'pro-html.zip'
        target: '/home/ubuntu'
        


    - name: ssh to ec2
      uses: fifsky/ssh-action@master
      with:
       command: |
        sudo apt update
        sudo apt install unzip -y
        unzip pro-html.zip
        sudo cp -r ~/pro-html/* /var/www/html
       host: ${{needs.job1.outputs.output-1}}
       user: ubuntu
       key: ${{ secrets.EC2_SSH_KEY}}

    - name: create ami 
      run: |
       aws ec2 create-image --instance-id ${{ needs.job1.outputs.output-2 }} --name "new-ec2" --description "new instance with updated artifact code" --query ImageId --output text > ami_id.txt
        


    - name: create/update launch template 
      run: |
       aws ec2 create-launch-template-version --launch-template-name test --launch-template-data  "ImageId=$(cat ami_id.txt)" --source-version 1

    - name: updated  auto scaling group
      run: |
        aws autoscaling update-auto-scaling-group --auto-scaling-group-name demo --launch-template LaunchTemplateName=test,Version=1   



        
  
####
